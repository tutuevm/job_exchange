""" Job, User, Attribute tables created; relationship created

Revision ID: 288692f7d383
Revises: b48ef407144f
Create Date: 2024-07-13 10:53:20.142419

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '288692f7d383'
down_revision: Union[str, None] = 'b48ef407144f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_attributes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=False),
    sa.Column('period', sa.DateTime(), nullable=False),
    sa.Column('action_type', sa.Uuid(), nullable=False),
    sa.Column('location', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['action_type'], ['action_types.id'], ),
    sa.ForeignKeyConstraint(['location'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_attribute_association',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('attribute_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['user_attributes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_job_association',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_job_association')
    op.drop_table('user_attribute_association')
    op.drop_table('jobs')
    op.drop_table('users')
    op.drop_table('user_attributes')
    # ### end Alembic commands ###
